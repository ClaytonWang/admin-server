##安装docker-compse
#
# sudo curl -SL https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
# sudo chmod +x /usr/local/bin/docker-compose
# sudo mkdir -p /apps/mysql/{datadir,conf,source}
# touch /apps/mysql/conf/my.cnf
# sudo docker-compose up -d
##

version: '3'
services:
  mysql:
    restart: always
    image: mysql:5.7.35
    container_name: mysql
    networks:
      - my-server
    volumes:
      - /apps/mysql/datadir:/var/lib/mysql
      - /apps/mysql/conf/my.cnf:/etc/mysql/my.cnf
      # 数据库还原目录 可将需要还原的sql文件放在这里
      - /apps/mysql/source:/docker-entrypoint-initdb.d
    environment:
      - "MYSQL_ROOT_PASSWORD=admin2023"
      - "MYSQL_DATABASE=admin"
      - "TZ=Asia/Shanghai"
    ports:
      # 使用宿主机的3306端口映射到容器的3306端口
      # 宿主机：容器
      - 3306:3306
  redis:
     image: redis:latest
     restart: always
     container_name: redis
     networks:
       - my-server
     ports:
       - "6379:6379"
     volumes:
       - /apps/redis/redis.conf:/etc/redis/redis.conf
       - /apps/redis/data:/data
     command: redis-server /etc/redis/redis.conf
     privileged: true
  worker:
    image: claydocker/xuanlianghao-worker:master
    restart: on-failure
    container_name: worker
    networks:
      - my-server
    depends_on:
      - mysql
      - redis
  server:
    image: claydocker/xuanlianghao-server:main
    restart: on-failure
    container_name: server
    networks:
        - my-server
    ports:
       - "7002:7002"
    depends_on:
      - mysql
      - redis
  # server-web:
  #   image: claydocker/xuanlianghao-server-web:main
  #   restart: on-failure
  #   container_name: server-web
  # networks:
  #           - my-server
  #   command: npm start
  #   depends_on:
  #     - mysql
  #     - redis
  xuanlianghao:
    image: claydocker/xuanlianghao:main
    restart: on-failure
    container_name: xuanlianghao
    networks:
      - my-server
    ports:
       - "80:80"
       - "443:443"
    depends_on:
      - mysql
      - redis

networks:
    my-server:
